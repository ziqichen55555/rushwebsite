# Generated by Django 5.2 on 2025-06-15 08:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=3)),
            ],
            options={
                'ordering': ['city', 'name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_available', models.BooleanField(default=True, verbose_name='Is Available')),
                ('available_for_booking', models.BooleanField(default=True, verbose_name='Available for Booking')),
                ('is_virtual', models.BooleanField(default=False, verbose_name='Is Virtual')),
                ('is_utilize', models.BooleanField(default=True, verbose_name='Is Utilize')),
                ('registration_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Registration No')),
                ('year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Year')),
                ('fleet_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Fleet No')),
                ('colour', models.CharField(blank=True, max_length=50, null=True, verbose_name='Colour')),
                ('transmission', models.CharField(blank=True, max_length=20, null=True, verbose_name='Transmission')),
                ('fuel_capacity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Fuel Capacity')),
                ('current_kms', models.IntegerField(blank=True, default=0, null=True, verbose_name='Current KMs')),
                ('date_off_fleet', models.DateField(blank=True, null=True, verbose_name='Date Off Fleet')),
                ('rego_expiration_date', models.DateField(blank=True, null=True, verbose_name='Registration Expiration Date')),
                ('rwc_cof_date', models.DateField(blank=True, null=True, verbose_name='RWC/COF Date')),
                ('electrical_date', models.DateField(blank=True, null=True, verbose_name='Electrical Date')),
                ('grade', models.CharField(blank=True, max_length=20, null=True, verbose_name='Grade')),
                ('radio_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Radio Code')),
                ('pm_schedule_category', models.CharField(blank=True, max_length=100, null=True, verbose_name='PM Schedule Category')),
                ('pm_base_date', models.DateField(blank=True, null=True, verbose_name='PM Base Date')),
                ('pm_base_mileage', models.IntegerField(blank=True, null=True, verbose_name='PM Base Mileage')),
                ('road_user_expiry_kms', models.IntegerField(blank=True, null=True, verbose_name='Road User Expiry KMs')),
                ('emission_rate', models.CharField(blank=True, max_length=50, null=True, verbose_name='Emission Rate')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Car',
                'verbose_name_plural': 'Cars',
                'ordering': ['id', 'registration_no'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'ordering': ['state', 'name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='Australia', max_length=100)),
                ('sales_tax_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sales_tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('sales_tax_start_date', models.DateField(blank=True, null=True)),
                ('document_culture', models.CharField(default='en-AU', max_length=10)),
                ('system_culture', models.CharField(default='en-AU', max_length=10)),
                ('currency', models.CharField(default='AUD', max_length=10)),
                ('currency_symbol', models.CharField(default='$', max_length=10)),
                ('is_default', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location_name', models.CharField(max_length=100)),
                ('code', models.CharField(default='', max_length=10)),
                ('renting_location', models.BooleanField(default=True)),
                ('prefix', models.CharField(blank=True, max_length=3, null=True)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(max_length=255)),
                ('suburb', models.CharField(blank=True, max_length=100, null=True)),
                ('postcode', models.CharField(blank=True, max_length=10, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('fax', models.CharField(blank=True, max_length=20, null=True)),
                ('free_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('gmt_difference', models.CharField(blank=True, max_length=10, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('licence_no', models.CharField(blank=True, max_length=50, null=True)),
                ('currency', models.CharField(blank=True, max_length=3, null=True)),
                ('currency_symbol', models.CharField(blank=True, max_length=1, null=True)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('payment_details', models.TextField(blank=True, null=True)),
                ('map_url', models.URLField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
            options={
                'ordering': ['location_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MasterLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('master_location_name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['master_location_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateProvince',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
                ('state_tax_name', models.CharField(blank=True, max_length=100, null=True)),
                ('state_tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('state_tax_start_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'States/Provinces',
                'ordering': ['country', 'name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleCategoryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category_type', models.CharField(max_length=50)),
                ('rate_type', models.CharField(max_length=50)),
                ('web_available', models.BooleanField(default=False)),
                ('ordering', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'app_vehiclecategorytype',
                'ordering': ['ordering', 'category_type'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleFuel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fuel_type', models.CharField(max_length=100)),
                ('is_electric', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('fuel_unit', models.CharField(default='Liter', max_length=50)),
                ('fuel_unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_default', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('fuel_notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'app_vehiclefuel',
                'ordering': ['fuel_type'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='vehicle_images/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'app_vehicleimage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleMake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'app_vehiclemake',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('model_name', models.CharField(max_length=100)),
                ('fuel_capacity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'app_vehiclemodel',
                'ordering': ['model_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'app_vehicletype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('vehicle_category_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cars.vehiclecategorytype')),
            ],
            options={
                'verbose_name_plural': 'Car Categories (Legacy)',
                'db_table': 'cars_carcategory',
            },
        ),
        migrations.CreateModel(
            name='VehicleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('vehicle_category', models.CharField(max_length=100)),
                ('region', models.CharField(choices=[('melbourne', 'Melbourne'), ('sydney', 'Sydney'), ('brisbane', 'Brisbane'), ('perth', 'Perth'), ('adelaide', 'Adelaide'), ('gold_coast', 'Gold Coast'), ('xi_an', 'Xi An'), ('beijing', 'Beijing'), ('shanghai', 'Shanghai'), ('guangzhou', 'Guangzhou'), ('shenzhen', 'Shenzhen'), ('hangzhou', 'Hangzhou'), ('nanjing', 'Nanjing')], default='melbourne', max_length=50)),
                ('renting_category', models.BooleanField(default=False)),
                ('sipp_code', models.CharField(blank=True, max_length=10, null=True)),
                ('age_youngest_driver', models.IntegerField(default=21)),
                ('num_adults', models.IntegerField(default=0)),
                ('num_children', models.IntegerField(default=0)),
                ('num_large_case', models.IntegerField(default=0)),
                ('num_small_case', models.IntegerField(default=0)),
                ('emission_rate', models.CharField(blank=True, max_length=50, null=True)),
                ('vehicle_desc_url', models.URLField(blank=True, null=True)),
                ('friendly_description', models.TextField(blank=True, null=True)),
                ('daily_rate', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('category_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='cars.vehiclecategorytype')),
                ('image_upload', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='cars.vehicleimage')),
                ('vehicle_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='cars.vehicletype')),
            ],
            options={
                'verbose_name_plural': 'Vehicle Categories',
                'db_table': 'app_vehiclecategory',
                'ordering': ['category_type__ordering', 'vehicle_category'],
            },
        ),
        migrations.CreateModel(
            name='VehicleFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=100)),
                ('icon_class', models.CharField(default='fas fa-check', max_length=50)),
                ('vehicle_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='cars.vehiclecategory')),
            ],
            options={
                'db_table': 'cars_vehiclefeature',
            },
        ),
    ]
