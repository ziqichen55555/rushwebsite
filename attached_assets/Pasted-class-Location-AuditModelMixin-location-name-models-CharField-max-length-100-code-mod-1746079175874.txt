class Location(AuditModelMixin):
    location_name = models.CharField(max_length=100)
    code = models.CharField(max_length=10, default='')
    renting_location = models.BooleanField(default=True)
    prefix = models.CharField(max_length=3, blank=True, null=True)
    company_name = models.CharField(max_length=100, blank=True, null=True)
    address = models.CharField(max_length=255)
    suburb = models.CharField(max_length=100, blank=True, null=True)
    city = models.ForeignKey(City, on_delete=models.CASCADE, related_name='locations')
    state = models.ForeignKey(StateProvince, on_delete=models.CASCADE, related_name='locations')
    country = models.ForeignKey(Country, on_delete=models.CASCADE, related_name='locations')
    master_location = models.ForeignKey(MasterLocation, on_delete=models.SET_NULL, null=True, blank=True, related_name='locations')
    airport = models.ForeignKey(Airport, on_delete=models.SET_NULL, null=True, blank=True, related_name='locations')
    postcode = models.CharField(max_length=10, blank=True, null=True)
    phone = models.CharField(max_length=20, blank=True, null=True)
    fax = models.CharField(max_length=20, blank=True, null=True)
    free_phone = models.CharField(max_length=20, blank=True, null=True)
    mobile = models.CharField(max_length=20, blank=True, null=True)
    email = models.EmailField(blank=True, null=True)
    gmt_difference = models.CharField(max_length=10, blank=True, null=True)
    registration_number = models.CharField(max_length=50, blank=True, null=True)
    licence_no = models.CharField(max_length=50, blank=True, null=True)
    currency = models.CharField(max_length=3, blank=True, null=True)
    currency_symbol = models.CharField(max_length=1, blank=True, null=True)
    ip = models.GenericIPAddressField(blank=True, null=True)
    payment_details = models.TextField(blank=True, null=True)
    map_url = models.URLField(blank=True, null=True)
    latitude = models.DecimalField(max_digits=9, decimal_places=6, blank=True, null=True)
    longitude = models.DecimalField(max_digits=9, decimal_places=6, blank=True, null=True)

    class Meta:
        ordering = ['location_name']

    def __str__(self):
        return self.location_name